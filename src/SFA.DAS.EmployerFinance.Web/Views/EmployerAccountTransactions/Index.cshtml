@using System.Globalization
@using SFA.DAS.Authorization
@using SFA.DAS.Authorization.Mvc

@model OrchestratorResponse<FinanceDashboardViewModel>

@{
    ViewBag.PageID = "page-finance";
    ViewBag.Section = "finance";
    ViewBag.Title = "Finance";
    ViewBag.GaData.Vpv = "/accounts/finance";

    var culture = new CultureInfo("en-GB");
    var now = DateTime.UtcNow.ToGmtStandardTime();
}

<div class="grid-row">
    <div class="column-full">
        <h1 class="heading-xlarge">
            Finance
        </h1>
    </div>
</div>
<div class="grid-row">
    <div class="column-full">
        <div class="data-wrap">
            <div class="data data--current">
                <dl class="transfer-funds">
                    <dt>
                        Funds available to spend for the next 12 months
                    </dt>
                    @{
                        var availabledFunds = Model.Data.AvailableFunds.ToString("C0", culture);
                        var availabledFundsClass = string.Empty;

                        if (availabledFunds.Length > 8)
                        {
                            availabledFundsClass = "long";
                        }
                        if (availabledFunds.Length > 10)
                        {
                            availabledFundsClass = "longer";
                        }
                    }
                    <dd class="@availabledFundsClass">@availabledFunds</dd>
                </dl>
            </div>
            <div class="data data--current">
                <dl class="transfer-funds">
                    <dt>
                        Total funding expected in the next 12 months
                    </dt>
                    @{
                        var expectedFunding = Model.Data.FundingExpected.ToString("C0", culture);
                        var expectedFundingClass = string.Empty;

                        if (expectedFunding.Length > 8)
                        {
                            expectedFundingClass = "long";
                        }
                        if (expectedFunding.Length > 10)
                        {
                            expectedFundingClass = "longer";
                        }
                    }
                    <dd class="@expectedFundingClass">@expectedFunding</dd>
                </dl>
            </div>
            <div class="data data--current">
                <dl class="transfer-funds">
                    <dt>
                        Payments committed in the next 12 months
                    </dt>
                    @{
                        var projectedSpend = Model.Data.ProjectedSpend.ToString("C0", culture);
                        var projectedSpendClass = string.Empty;

                        if (projectedSpend.Length > 8)
                        {
                            projectedSpendClass = "long";
                        }
                        if (projectedSpend.Length > 10)
                        {
                            projectedSpendClass = "longer";
                        }
                    }
                    <dd class="@projectedSpendClass">@projectedSpend</dd>
                </dl>
            </div>

            <div class="data data--current">
                <dl class="transfer-funds">
                    <dt>
                        Current funds
                    </dt>
                    @{
                        var balance = Model.Data.CurrentLevyFunds.ToString("C0", culture);
                        var balanceClass = string.Empty;

                        if (balance.Length > 8)
                        {
                            balanceClass = "long";
                        }
                        if (balance.Length > 10)
                        {
                            balanceClass = "longer";
                        }
                    }
                    <dd class="@balanceClass">@balance</dd>
                </dl>
            </div>
            <div class="data data--current">
                <dl class="transfer-funds">
                    <dt>
                        Total Spend for Last 12 Months
                    </dt>
                    @{
                        var totalSpend = Model.Data.TotalSpendForLastYear.ToString("C0", culture);
                        var totalSpendClass = string.Empty;

                        if (totalSpend.Length > 8)
                        {
                            totalSpendClass = "long";
                        }
                        if (totalSpend.Length > 10)
                        {
                            totalSpendClass = "longer";
                        }
                    }
                    <dd class="@totalSpendClass">@totalSpend</dd>
                </dl>
            </div>

            @if (Model.Data.ExpiringFunds.HasValue && Model.Data.ExpiringFunds > 0 && Model.Data.ExpiryDate.HasValue)
            {
                <div class="data data--long data--expired">
                    <dl class="transfer-funds">
                        @{
                            var expiryDate = Model.Data.ExpiryDate.Value.ToString("MMMM yyyy");
                        }
                        <dt>
                            of your funds could expire in <strong>@expiryDate </strong>
                        </dt>
                        @{
                            var expiringFunds = Model.Data.ExpiringFunds.Value.ToString("C0", culture);

                            var expiringFundsClass = string.Empty;

                            if (balance.Length > 8)
                            {
                                expiringFundsClass = "long";
                            }
                            if (balance.Length > 10)
                            {
                                expiringFundsClass = "longer";
                            }
                        }
                        <dd class="@expiringFundsClass">@expiringFunds</dd>
                    </dl>
                </div>
            }
        </div>
    </div>
</div>
<div class="grid-row">
    <div class="column-half">
        <h2 class="heading-medium"><a title="View transactions" href="@Url.Action("TransactionsView", "EmployerAccountTransactions", new { hashedAccountId = Model.Data.AccountHashedId, year = now.Year, month = now.Month })">
                View transactions
            </a></h2>
        <p>View payments made into and out of your apprenticeship service account. </p>
    </div>
    <div class="column-half">
        <h2 class="heading-medium"><a title="Download transactions" href="@Url.Action("TransactionsDownload", "EmployerAccountTransactions", new { hashedAccountId = Model.Data.AccountHashedId })">
                Download transactions
            </a></h2>
        <p>Download your financial transactions within a specific date range. </p>
    </div>
    @if (Html.IsAuthorized(FeatureType.Projections))
    {
        <div class="column-half">
            <h2 class="heading-medium"><a title="Funding projection" href="@Url.EmployerProjectionsAction("forecasting/projections")">
                    Funding projection
                </a></h2>
            <p>View funding projection to plan your future spending. </p>
        </div>
    }
    <div class="column-half">
        <h2 class="heading-medium"><a title="Manage transfers" href="@Url.EmployerAccountsAction("transfers")">
                Transfers
            </a></h2>
        <p>Connect with other employers and send or receive transfer funds. </p>
    </div>
</div>

@section breadcrumb {
    <div class="breadcrumbs">
        <ol role="navigation">         
            <li><a href="@Url.EmployerAccountsAction("teams")">Home</a></li>
            <li>@ViewBag.Title</li>
        </ol>
    </div>
}

@section pageSpecificJS {
    <script language="javascript" type="text/javascript" src="~/bundles/modernizr"></script>
}
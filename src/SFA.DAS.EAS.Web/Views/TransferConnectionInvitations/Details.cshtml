@using SFA.DAS.EAS.Domain.Models.TransferConnections
@using SFA.DAS.EAS.Web.Extensions

@model SFA.DAS.EAS.Web.ViewModels.TransferConnectionInvitations.TransferConnectionInvitationViewModel

@{
    ViewBag.Title = "Transfer connection invitation details";
    ViewBag.Section = "finance";
    ViewBag.PageID = "page-transfer-connection-invitations-details";
    ViewBag.GaData.Vpv = "/accounts/transfers/connections/invitations/details";
}

<div class="grid-row">
    <div class="column-two-thirds">
        <h1 class="heading-xlarge">Connection request details</h1>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.DeleteTransferConnectionInvitationCommand.TransferConnectionInvitationId)
            <div class="form-group">
                <table>
                    <tbody>
                        @{
                            var peerAccount = Model.TransferConnectionInvitation.GetPeerAccount(Model.AccountId);
                        }
                        <tr>
                            <td>Account name</td>
                            <td>@peerAccount.Name</td>
                        </tr>
                        <tr>
                            <td>Account ID</td>
                            <td>@peerAccount.PublicHashedId</td>
                        </tr>
                        <tr>
                            <td>Status</td>
                            <td>@Model.TransferConnectionInvitation.Status.ToString()</td>
                        </tr>
                        @switch (Model.TransferConnectionInvitation.Status)
                        {
                            case TransferConnectionInvitationStatus.Approved:
                                var approvedChange = Model.TransferConnectionInvitation.GetApprovedChange();
                                <tr>
                                    <td>Approved by</td>
                                    <td>@approvedChange.User.FullName</td>
                                </tr>
                                <tr>
                                    <td>Approved on</td>
                                    <td>@approvedChange.CreatedDate.ToString("d MMMM yyyy")</td>
                                </tr>
                                break;
                            case TransferConnectionInvitationStatus.Rejected:
                                var rejectedChange = Model.TransferConnectionInvitation.GetRejectedChange();
                                <tr>
                                    <td>Rejected by</td>
                                    <td>@rejectedChange.User.FullName</td>
                                </tr>
                                <tr>
                                    <td>Rejected on</td>
                                    <td>@rejectedChange.CreatedDate.ToString("d MMMM yyyy")</td>
                                </tr>
                                break;
                        }
                    </tbody>
                </table>
            </div>
            if (Model.TransferConnectionInvitation.Status == TransferConnectionInvitationStatus.Rejected)
            {
                <div class="form-group @(Html.IsValid(m => m.Choice) ? "" : "error")">
                    <fieldset>
                        <legend>
                            <span class="form-label-bold">Do you want to delete this connection request?</span>
                            @Html.ValidationMessageFor(m => m.Choice)
                        </legend>
                        <label class="block-label selection-button-radio">
                            @Html.RadioButtonFor(m => m.Choice, "Confirm")
                            Yes, delete this request
                        </label>
                        <label class="block-label selection-button-radio">
                            @Html.RadioButtonFor(m => m.Choice, "GoToTransfersPage")
                            No, go back to the transfers dashboard
                        </label>
                    </fieldset>
                </div>
                <button class="button" type="submit">Continue</button>
            }
        }
    </div>
</div>

@section breadcrumb {
    <div class="breadcrumbs" id="js-breadcrumbs">
        <a aria-label="Back" class="back-link" href="@Url.Action("Index", "Transfers")">Back</a>
    </div>
}
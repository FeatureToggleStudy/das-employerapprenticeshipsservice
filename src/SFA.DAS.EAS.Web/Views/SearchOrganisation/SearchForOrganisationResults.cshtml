@using SFA.DAS.EAS.Web.Extensions
@using SFA.DAS.EAS.Web.ViewModels.Organisation
@model SFA.DAS.EAS.Web.OrchestratorResponse<SearchOrganisationViewModel>

@{ 
    ViewBag.PageID = "select-your-organisation";
    ViewBag.Title = "Select your organisation";
    ViewBag.HideNav = "true";
}

<div class="grid-row">
    <div class="column-two-thirds">
        <h1 class="heading-xlarge">@ViewBag.Title</h1>
        <form action="@Url.Action("SearchForOrganisationResults")" method="POST">
            <div class="search-field">
                <fieldset class="search-input">
                    <label for="searchTerm">
                        <span class="form-label-bold">Search results</span>
                    </label>
                    <input type="text" id="searchTerm" name="searchTerm" value="@Model.Data.SearchTerm" class="form-control" />
                </fieldset>
                <fieldset class="search-submit">
                    <button type="submit" class="button">Search</button>
                </fieldset>
            </div>
        </form>
        <p>@(Model.Data?.Results.TotalResults ?? 0) results found</p>
    </div>
</div>

<div class="grid-row search-results">
    <aside>
        <h2 class="heading-medium">Filter results</h2>
        <div class="filter">
            <h3>Organisation type</h3>
            <label class="block-label selection-button-radio" for="ltd">
                <input id="ltd" type="radio" name="org-type" value="ltd" /> Private limited company
            </label>
            <label class="block-label selection-button-radio" for="plc">
                <input id="plc" type="radio" name="org-type" value="plc" /> Public limited company
            </label>
            <label class="block-label selection-button-radio" for="pb">
                <input id="pb" type="radio" name="org-type" value="pb" /> Public body
            </label>
            <label class="block-label selection-button-radio" for="ipo">
                <input id="ipo" type="radio" name="org-type" value="ipo" /> Industrial and provident organisation
            </label>
            <label class="block-label selection-button-radio" for="rc">
                <input id="rc" type="radio" name="org-type" value="rc" /> Royal charter
            </label>
            <label class="block-label selection-button-radio" for="charity">
                <input id="charity" type="radio" name="org-type" value="charity" /> Registered charity
            </label>
            <label class="block-label selection-button-radio" for="all">
                <input id="all" type="radio" name="org-type" value="all" checked="checked" /> Show all 
            </label>
        </div>
    </aside>
    <section class="results-list">
        

            @if (Model.Data != null)
            {
                <ol>
                @foreach (var organisation in Model.Data.Results.Data)
                {
                    <li>
                        <article>
                            <form action="@Url.Action("SelectOrganisation")" method="post">
                                <input type="hidden" id="DateOfInception" name="DateOfInception" value="@organisation.RegistrationDate" />
                                <input type="hidden" id="OrganisationCode" name="OrganisationCode" value="@organisation.Code" />
                                <input type="hidden" id="Sector" name="Sector" value="@organisation.Sector" />
                                <input type="hidden" id="Type" name="Type" value="@organisation.Type" />
                                <input type="hidden" id="Name" name="Name" value="@organisation.Name" />
                                <input type="hidden" id="Address" name="Address" value="@organisation.Address.GetAddress()" />
                                <button type="submit" class="heading-medium link-button">@organisation.Name</button>
                            </form>
                           
                            <dl class="inline">
                                <dt>Address</dt>
                                @{
                                    var address = organisation.Address.GetAddress();
                                }
                                <dd>@(string.IsNullOrEmpty(address) ? "No address supplied" : address)</dd>
                                <dt>Type</dt>
                                <dd>@organisation.Type.GetDescription()</dd>
                            </dl>
                        </article>
                    </li>
                }
                </ol>
            }
            else
            {
                 <p>No results found</p>
            }

            

            @*<li class="added">
                <article>
                    <h1 class="heading-medium">20-20 Housing Co-operative Limited</h1>
                    <dl class="inline">
                        <dt>Address</dt>
                        <dd>123 Some Street, Tiny Town, AB1 2CD</dd>
                        <dt>Type</dt>
                        <dd>Private limited company</dd>
                    </dl>
                    <p>Already added - <a href="">view my organisations</a>
                    </p>
                </article>
            </li>*@
            
        
        <nav>
            <ul class="previous-next-navigation">
                @if (Model.Data.Results.PageNumber > 1)
                {
                    <li class="previous">
                        <a href="@Url.Action("SearchForOrganisationResults", new {searchTerm = Model.Data.SearchTerm, pageNumber = Model.Data.Results.PageNumber - 1 })">
                            Previous page
                            <span class="detail">Page @(Model.Data.Results.PageNumber - 1) of @Model.Data.Results.TotalPages</span>
                        </a>
                    </li>
                }
                @if (Model.Data.Results.PageNumber < Model.Data.Results.TotalPages)
                {
                    <li class="next">
                        <a href="@Url.Action("SearchForOrganisationResults", new {searchTerm = Model.Data.SearchTerm, pageNumber = Model.Data.Results.PageNumber + 1 })">
                            Next page
                            <span class="detail">Page @(Model.Data.Results.PageNumber + 1) of @Model.Data.Results.TotalPages</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </section>

   
</div>

@section breadcrumb {
    <div class="breadcrumbs">
        <a href="@Url.Action("Index", "Home")" class="link-back">Back</a>
    </div>
}
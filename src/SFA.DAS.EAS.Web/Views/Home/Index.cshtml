@using SFA.DAS.EAS.Domain
@model SFA.DAS.EAS.Web.OrchestratorResponse<SFA.DAS.EAS.Web.Models.UserAccountsViewModel>
@{ViewBag.PageID = "page-auth-homepage"; }
@{ViewBag.Section = "home"; }
@{ViewBag.Title = "Your accounts"; }
@{ViewBag.HideNav = "true"; }

@if (!string.IsNullOrWhiteSpace(Model.Data.ErrorMessage))
{
    <div class="grid-row">
        <div class="column-full">
            <div class="panel panel-error">
                @Model.Data.ErrorMessage
            </div>
        </div>
    </div>
}
<div class="grid-row">
    <div class="column-full">
        <section>
            <h1 class="heading-xlarge" id="Levy-accounts">Your accounts</h1>
            @if (Model.Data.Accounts.AccountList.Count == 0)
            {
                <p>With levy accounts you can:</p>
                <ul class="list list-bullet" aria-labelledby="Levy-accounts">
                    <li>view financial information</li>
                    <li>create or amend apprenticeships</li>
                    <li>spend money</li>
                </ul>
                <p>At the moment, you don't have access to any levy accounts. You need to be invited to an account or add a new one.</p>
            }
            else
            {
                <p>Select an account or add a new one.</p>
                <table>
                    <thead>
                        <tr>
                            <th scope="col">Account name</th>
                            <th scope="col">Rename account</th>
                            <th scope="col">What you can do</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var account in Model.Data.Accounts.AccountList)
                        {
                            <tr>
                                <td class="responsive-td">
                                    <span class="force-word-wrap">
                                        @account.Name
                                    </span>
                                </td>
                                <td class="responsive-td">
                                    <a href="@Url.Action("RenameAccount", "EmployerAccount", new {HashedAccountId = account.HashedId})">Rename this <span class="vh">@account.Name</span> account</a>                                    
                                </td>
                                <td class="responsive-td">
                                    @RoleStrings.GetRoleDescription(account.RoleName)
                                </td>
                                <td class="responsive-td link-right">
                                    <a aria-label="View account homepage for @account.Name"
                                           title="View account homepage for @account.Name"
                                           href="@Url.Action("Index", "EmployerTeam", new {HashedAccountId = account.HashedId})">
                                    Open<span class="vh"> @account.Name account homepage</span>
                                   </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            <p>
                <a href="@Url.Action("SelectEmployer", "EmployerAccount")" class="button" id="add_new_account" aria-label="Add new account">Add new account</a>
            </p>
        </section>

        @if (Model.Data.Invitations > 0)
            {
            <section>
                <h2 class="heading-medium">Invitations</h2>
                <p>
                    You have <strong class="bold-small">@Model.Data.Invitations</strong> pending invitation@(Model.Data.Invitations == 1 ? "" : "s") to employer accounts.
                </p>
                <p>
                    <a href="@Url.Action("All", "Invitation")" class="link">View Invitations</a>
                </p>
            </section>
        }

    </div>
</div>
@if (TempData.ContainsKey("virtualPageUrl") && TempData.ContainsKey("virtualPageTitle"))
{
    <script type="text/javascript">

        dataLayer.push({
            'event': 'VirtualPageview',
            'virtualPageURL': '@TempData["virtualPageUrl"]',
            'virtualPageTitle': '@TempData["virtualPageTitle"]'
        });

    </script>
}

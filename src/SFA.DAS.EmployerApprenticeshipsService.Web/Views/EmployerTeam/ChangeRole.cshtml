@using SFA.DAS.EmployerApprenticeshipsService.Domain
@model SFA.DAS.EmployerApprenticeshipsService.Domain.TeamMember

<div class="grid-row">
    <div class="column-two-thirds">
        <h2 class="heading-medium">Change access</h2>
        @if (!ViewContext.ViewData.ModelState.IsValid)
        {
            foreach (var state in ViewContext.ViewData.ModelState.Values)
            {
                foreach (var error in state.Errors)
                {
                    <div class="error" style="margin-bottom: 10px;" id="invalidMessage">
                        <p class="error-message">@error.ErrorMessage</p>
                    </div>
                }
            }
        }
        <form method="POST" action="@Url.Action("ChangeRole")">
            @Html.AntiForgeryToken()
            <div class="form-group">
                <label class="form-label" for="Email">Team member access for @Model.Email</label>
            </div>
            <div class="form-group">
                <label class="block-label" for="radio1">
                    <input id="radio1" type="radio" name="Role" value="3" @(Model.Role == Role.Viewer ? "checked" : "") />
                    <span class="heading-small">Viewer</span><br />
                    A "Viewer" is a team member with limited access to the organisation's account.
                    They can view contracts and account information, but not make changes to it.
                </label>
            </div>
            <div class="form-group">
                <label class="block-label" for="radio2">
                    <input id="radio2" type="radio" name="Role" value="2" @(Model.Role == Role.Transactor ? "checked" : "") />
                    <span class="heading-small">Transactor</span><br/>
                    A "Transactor" is a team member who can:<br/>
                    &ndash;&ensp;create new contracts<br />
                    &ndash;&ensp;approve in-progress contracts<br />
                    &ndash;&ensp;pause training payments<br />
                    &ndash;&ensp;stop training payments
                </label>
            </div>
            <div class="form-group">
                <label class="block-label" for="radio3">
                    <input id="radio3" type="radio" name="Role" value="1" @(Model.Role == Role.Owner ? "checked" : "") />
                    <span class="heading-small">Owner</span><br/>
                    An "Owner" is a team member with full access to the organisation's account.
                    They can do everything a viewer or doer can and also<br/>
                    &ndash;&ensp;manage team members<br />
                    &ndash;&ensp;manage PAYE schemes
                </label>
            </div>
            <input type="hidden" id="AccountId" name="AccountId" value="@Model.AccountId" />
            <input type="hidden" id="Email" name="Email" value="@Model.Email" />
            <button type="submit" class="button">Continue</button>
            <p></p>
        </form>
    </div>
</div>